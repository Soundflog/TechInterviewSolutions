# Бесконечно можно смотреть на 3 вещи: как горит огонь, как течет вода и как логотип DVD отражается от границ экрана.
#
# Олды помнят, что при подключении проигрывателя, на телевизоре, в левом верхнем углу, появлялся логотип DVD. Сначала
# этот логотип двигался по биссектрисе угла экрана, а затем, сталкиваясь с границами экрана, отражался от них как шар
# в бильярде (угол падения равен углу отражения).
#
# Наблюдая за этим завораживающим действом, все неизменно задавались вопросом: "Когда же логотип попадет точно в
# один из углов экрана?"
#
# Дайте ответ на этот величайший вопрос человечества, предполагая, что логотип представляет собой точку (размер
# логотипа пренебрежимо мал по сравнению с размером экрана).
#
# Формат входных данных В единственной строке находятся два целых числа n и m — ширина и высота экрана
# соответственно. Считается, что ширина — это расстояние от левого края экрана до правого, а высота — от верхнего до
# нижнего.
#
# Формат выходных данных
# Выведите:
#
# 0, если логотип никогда не попадёт в угол;
# 1, если логотип попадёт в левый верхний угол;
# 2, если логотип попадёт в правый верхний угол;
# 3, если логотип попадёт в левый нижний угол;
# 4, если логотип попадёт в правый нижний угол.
# Замечание
# Вы можете использовать функции gcd (НОД) и lcm (НОК) из модуля math.
#
# P.S. НОК(a, b) = a*b/НОД(a, b)

# ------------- SOLUTION 1 ------------------
# def gcd(a, b):
#     while b:
#         a, b = b, a % b
#     return a
#
#
# def lcm(a, b):
#     return a * b // gcd(a, b)
#
#
# def dvd_logo_in_corner(n, m):
#     lcm_nm = lcm(n, m)
#
#     # Периоды полного цикла до касания каждого из краев
#     x_periods = lcm_nm // n
#     y_periods = lcm_nm // m
#
#     # Определяем в какой угол попадет логотип
#     if x_periods % 2 == 1 and y_periods % 2 == 1:
#         return 1  # Левый верхний угол
#     elif x_periods % 2 == 0 and y_periods % 2 == 1:
#         return 2  # Правый верхний угол
#     elif x_periods % 2 == 1 and y_periods % 2 == 0:
#         return 3  # Левый нижний угол
#     elif x_periods % 2 == 0 and y_periods % 2 == 0:
#         return 4  # Правый нижний угол
#     return 0
#
#
# # Чтение входных данных
# n, m = map(int, input().strip().split())
#
# # Вывод результата
# print(dvd_logo_in_corner(n, m))


# --------------- SOLUTION 2 ------------------
import math


def determine_corner(n, m):
    # Найдите НОК ширины и высоты экрана
    gcd_nm = math.gcd(n, m)
    if gcd_nm == 1:
        # Если НОД равен 1, логотип никогда не попадет в угол
        return 0
    lcm_nm = (n * m) // math.gcd(n, m)
    # Определите попадание в угол
    if (lcm_nm // n) % 2 == (lcm_nm // m) % 2:
        return 1  # Левый верхний угол
    elif (lcm_nm // n) % 2 == (lcm_nm // m) % 2 + 1:
        return 2  # Правый верхний угол
    elif (lcm_nm // n) % 2 + 1 == (lcm_nm // m) % 2:
        return 3  # Левый нижний угол
    else:
        return 4  # Правый нижний угол


# Чтение входных данных
n, m = map(int, input().split())
print(determine_corner(n, m))




