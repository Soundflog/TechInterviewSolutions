# 1 задание.
# В центре города Т находится оживленная улица, одно из самых популярных мест для прогулок жителей и туристов.
#
# Мария, владелица популярного кафе, задумала повесить на этой улице 2 рекламных плаката, чтобы привлечь как можно
# больше клиентов. Для оптимизации вложенных средств Мария хочет выбрать такие места, чтобы плакаты не попадали в
# поле зрения друг друга. Из-за особенностей улицы и человеческого зрения, плакаты будут видны одновременно только в
# том случае, если они будут расположены на расстоянии не более r метров друг от друга .
#
# Мария заинтересовалась, сколько есть различных способов выбрать два места для размещения рекламных плакатов,
# чтобы они не были видны одновременно.
#
# Формат входных данных В первой строке входного файла находятся два целых числа ﻿ n﻿ и ﻿r﻿ ﻿(2≤n≤5000,1≤r≤100)﻿ —
# количество мест, на которых можно разместить плакаты и максимальное расстояние, на котором плакаты будут видны.
#
# Во второй строке задано n положительных чисел ﻿ d_1, ..., d_n, где ﻿﻿d_n — расстояние от i﻿-го места плаката до
# начала улицы. Все места находятся на разном расстоянии от начала улицы и упорядочены по возрастанию ﻿ 1 ≤ d_1 ≤ d_2
# ≤ ... ≤ d_n ≤ 100000
#
# Формат выходных данных
# Выведите одно число - число способов выбрать места для рекламных плакатов.

def count_valid_pairs(n, r, distances):
    count = 0
    j = 0

    for i in range(n):
        # Найти первое j такое, что distances[j] > distances[i] + r
        while j < n and distances[j] <= distances[i] + r:
            j += 1
        # Все индексы от j до n-1 будут удовлетворять условию
        count += n - j

    return count


# Чтение входных данных
n, r = map(int, input().split())
distances = list(map(int, input().split()))

# Вычисление числа пар
result = count_valid_pairs(n, r, distances)
print(result)

